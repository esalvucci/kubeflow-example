steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/$_PROJECT_NAME/$_DATA_INGESTION:$SHORT_SHA', '.']
    dir: $_COMPONENTS_FOLDER/$_DATA_INGESTION
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/$_PROJECT_NAME/$_DATA_PREPARATION:$SHORT_SHA', '.']
    dir: $_COMPONENTS_FOLDER/$_DATA_PREPARATION
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/$_PROJECT_NAME/$_DATA_TRANSFORMATION:$SHORT_SHA', '.']
    dir: $_COMPONENTS_FOLDER/$_DATA_TRANSFORMATION
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/$_PROJECT_NAME/$_MODEL_TRAINING:$SHORT_SHA', '.']
    dir: $_COMPONENTS_FOLDER/$_MODEL_TRAINING
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/$_PROJECT_NAME/$_MODEL_EVALUATION:$SHORT_SHA', '.']
    dir: $_COMPONENTS_FOLDER/$_MODEL_EVALUATION
  - name: 'gcr.io/$_PROJECT_ID/kfp-cli'
    env:
      - 'DOCKER_CONTAINER_REGISTRY_BASE_URL=$_DOCKER_CONTAINER_REGISTRY_BASE_URL'
      - 'TAG=$SHORT_SHA'
      - 'HOST=$_ENDPOINT'
      - 'PROJECT_NAME=$_PROJECT_NAME'
      - 'DATA_INGESTION=$_DATA_INGESTION'
      - 'DATA_PREPARATION=$_DATA_PREPARATION'
      - 'DATA_TRANSFORMATION=$_DATA_TRANSFORMATION'
      - 'MODEL_TRAINING=$_MODEL_TRAINING'
      - 'MODEL_EVALUATION=$_MODEL_EVALUATION'
    args:
      - '-c'
      # The pipeline (name) must exist here
      - 'dsl-compile --py pipeline.py --output training_pipeline.tar.gz'
    dir: $_PIPELINE_FOLDER
  - name: 'gcr.io/$_PROJECT_ID/kfp-cli'
    args:
      - '-c'
      - 'kfp --endpoint $_ENDPOINT pipeline upload-version -p
           $(kfp --endpoint $_ENDPOINT pipeline list | grep -w "${_PIPELINE_NAME}"  |
             grep -E -o -e "([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}")
         -v ${SHORT_SHA} training_pipeline.tar.gz'
    dir: $_PIPELINE_FOLDER
  - name: 'gcr.io/$_PROJECT_ID/kfp-cli'
    args:
      - '-c'
      - 'kfp --endpoint $_ENDPOINT run submit
              -e "${_PIPELINE_NAME}"
              -r ${SHORT_SHA}
              -p $(kfp --endpoint $_ENDPOINT pipeline list | grep -w "${_PIPELINE_NAME}"  |
                   grep -E -o -e "([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}")'
    dir: $_PIPELINE_FOLDER


images:
  - '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/forecasting_example/$_DATA_INGESTION:$SHORT_SHA'
  - '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/forecasting_example/$_DATA_PREPARATION:$SHORT_SHA'
  - '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/forecasting_example/$_DATA_TRANSFORMATION:$SHORT_SHA'
  - '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/forecasting_example/$_MODEL_TRAINING:$SHORT_SHA'
  - '$_DOCKER_CONTAINER_REGISTRY_BASE_URL/forecasting_example/$_MODEL_EVALUATION:$SHORT_SHA'